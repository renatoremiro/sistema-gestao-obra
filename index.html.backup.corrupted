<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de GestÃ£o Completo - Obra 292 (Firebase v5.1)</title>
    
    <!-- CSS Files -->
    <link rel="stylesheet" href="assets/css/reset.css">
    <link rel="stylesheet" href="assets/css/variables.css">
    <link rel="stylesheet" href="assets/css/components.css">
    <link rel="stylesheet" href="assets/css/layout.css">
    <link rel="stylesheet" href="assets/css/calendar.css">
    <link rel="stylesheet" href="assets/css/responsive.css">
    <link rel="stylesheet" href="assets/css/animations.css">
</head>
<body>
    <!-- Sistema de NotificaÃ§Ãµes -->
    <div id="notification" class="notification">
        <span id="notificationText"></span>
    </div>
    
    <!-- Indicador de SincronizaÃ§Ã£o -->
    <div id="syncIndicator" class="sync-indicator synced">
        <span class="loading" id="syncLoader" style="display: none;"></span>
        <span id="syncText">âœ“ Sincronizado</span>
    </div>
    
    <!-- Indicador de UsuÃ¡rios Online -->
    <div id="usersOnline" class="users-online hidden">
        <div style="font-size: 13px; color: #6b7280;">Equipe Online</div>
        <div class="users-online-list" id="usersOnlineList"></div>
    </div>
    
    <!-- Log de Atividades -->
    <div class="activity-toggle" onclick="toggleActivityLog()">
        ðŸ“‹ Atividades
    </div>
    
    <div id="activityLog" class="activity-log">
        <div class="activity-log-header">
            <span>Atividades Recentes</span>
            <span style="cursor: pointer;" onclick="toggleActivityLog()">âœ•</span>
        </div>
        <div class="activity-log-content" id="activityLogContent">
            <!-- Atividades serÃ£o inseridas aqui -->
        </div>
    </div>
    
    <!-- Modal de Conflito -->
    <div id="conflictModal" class="conflict-modal">
        <h3>âš ï¸ Conflito de EdiÃ§Ã£o</h3>
        <p id="conflictMessage"></p>
        <div class="conflict-options">
            <button class="btn btn-primary" onclick="resolverConflito('manter')">
                Manter Minhas AlteraÃ§Ãµes
            </button>
            <button class="btn btn-secondary" onclick="resolverConflito('descartar')">
                Usar VersÃ£o do Servidor
            </button>
        </div>
    </div>
    
    <!-- Tela de Login -->
    <div id="loginScreen" class="login-container">
        <h2>ðŸ—ï¸ Sistema de GestÃ£o</h2>
        <p style="text-align: center; color: #6b7280; margin-bottom: 24px;">Obra 292 - Museu Nacional</p>
        
        <div class="form-group">
            <label>Email</label>
            <input type="email" id="loginEmail" placeholder="seu@email.com">
        </div>
        
        <div class="form-group">
            <label>Senha</label>
            <input type="password" id="loginPassword" placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢">
        </div>
        
        <button class="btn btn-primary" style="width: 100%;" onclick="fazerLogin()">
            Entrar
        </button>
        
        <div style="margin-top: 16px; text-align: center;">
            <a href="#" onclick="mostrarRegistro()" style="color: #3b82f6; text-decoration: none;">
                NÃ£o tem conta? Registre-se
            </a>
        </div>
    </div>
    
    <div class="container" id="mainContainer" class="hidden">
        <!-- Breadcrumb de NavegaÃ§Ã£o -->
        <div id="breadcrumb" class="breadcrumb hidden">
            <span id="breadcrumbPath"></span>
        </div>
        
        <div class="header">
            <div>
                <h1>Sistema de GestÃ£o Colaborativo</h1>
                <p>Obra 292 - Museu Nacional</p>
                <p style="font-size: 14px; color: #6b7280;">
                    Sistema v5.1 Firebase - Melhorias AvanÃ§adas ðŸš€
                    <span id="usuarioInfo" style="margin-left: 16px; font-weight: bold;"></span>
                </p>
            </div>
            <div style="text-align: right;">
                <p id="dataAtual" style="color: #6b7280;"></p>
                <p style="font-weight: bold;">
                    <span id="mesAno">Julho 2025</span>
                </p>
                <div style="margin-top: 8px;">
                    <button class="btn btn-success btn-sm" onclick="exportarDados()">
                        ðŸ“¥ Exportar
                    </button>
                    <button class="btn btn-primary btn-sm" onclick="mostrarImportar()">
                        ðŸ“¤ Importar
                    </button>
                    <button class="btn btn-warning btn-sm" onclick="mostrarMarcarFeriado()">
                        ðŸŽ‰ Feriados
                    </button>
                    <button class="btn btn-danger btn-sm" onclick="fazerLogout()">
                        ðŸšª Sair
                    </button>
                </div>
            </div>
        </div>
        
        <!-- Dashboard Executivo -->
        <div id="dashboardExecutivo">
            <!-- EstatÃ­sticas RÃ¡pidas -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="resumo-numero" style="color: #10b981;" id="statEmDia">0</div>
                    <div>Em Dia</div>
                    <div class="progress-bar">
                        <div class="progress-fill" id="progressEmDia" style="background: #10b981;"></div>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="resumo-numero" style="color: #f59e0b;" id="statAtencao">0</div>
                    <div>AtenÃ§Ã£o</div>
                    <div class="progress-bar">
                        <div class="progress-fill" id="progressAtencao" style="background: #f59e0b;"></div>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="resumo-numero" style="color: #ef4444;" id="statAtraso">0</div>
                    <div>Atraso</div>
                    <div class="progress-bar">
                        <div class="progress-fill" id="progressAtraso" style="background: #ef4444;"></div>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="resumo-numero" style="color: #8b5cf6;" id="statEventos">0</div>
                    <div>Eventos no MÃªs</div>
                </div>
            </div>
            
            <!-- CalendÃ¡rio -->
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                    <h3>ðŸ“… CalendÃ¡rio da Equipe</h3>
                    <div style="display: flex; gap: 8px;">
                        <button class="btn btn-secondary btn-sm" onclick="mudarMes(-1)">â—€ Anterior</button>
                        <button class="btn btn-primary btn-sm" onclick="mostrarNovoEvento()">+ Novo Evento</button>
                        <button class="btn btn-secondary btn-sm" onclick="mudarMes(1)">PrÃ³ximo â–¶</button>
                    </div>
                </div>
                
                <div id="calendario" class="calendario"></div>
                
                <div style="margin-top: 16px; display: flex; gap: 16px; flex-wrap: wrap; font-size: 12px;">
                    <span><span class="status-indicator evento-reuniao"></span>ReuniÃ£o</span>
                    <span><span class="status-indicator evento-entrega"></span>Entrega</span>
                    <span><span class="status-indicator evento-prazo"></span>Prazo</span>
                    <span><span class="status-indicator evento-marco"></span>Marco</span>
                    <span><span class="status-indicator evento-outro"></span>Outros</span>
                    <span><span class="status-indicator" style="background: #f59e0b;"></span>Feriado</span>
                    <span>ðŸ”„ Evento Recorrente</span>
                </div>
            </div>
            
            <!-- Timeline de PrÃ³ximos Eventos -->
            <div class="timeline-container">
                <h3 style="margin-bottom: 20px;">ðŸ“ PrÃ³ximos Eventos Importantes</h3>
                <div id="timelineEventos"></div>
            </div>
            
            <!-- Busca e Filtros -->
            <div class="card">
                <h3 style="margin-bottom: 16px;">ðŸ” Busca e Filtros</h3>
                <div class="search-box">
                    <input type="text" placeholder="Buscar atividades, pessoas, eventos..." id="searchInput" onkeyup="buscarGlobalDebounced()">
                    <button class="btn btn-primary" onclick="buscarGlobal()">Buscar</button>
                </div>
                <div class="filter-pills">
                    <div class="filter-pill active" onclick="filtrarStatus('todos', this)">Todos</div>
                    <div class="filter-pill" onclick="filtrarStatus('verde', this)">Em Dia</div>
                    <div class="filter-pill" onclick="filtrarStatus('amarelo', this)">AtenÃ§Ã£o</div>
                    <div class="filter-pill" onclick="filtrarStatus('vermelho', this)">Atraso</div>
                </div>
            </div>
            
            <!-- Dica do sistema -->
            <div style="background: #dbeafe; padding: 12px 16px; border-radius: 8px; margin-bottom: 20px; font-size: 13px; color: #1e40af;">
                <strong>ðŸ”¥ Sistema v5.1 - Novas Funcionalidades:</strong> 
                <br><strong>âœ… EdiÃ§Ã£o Completa de Tarefas:</strong> Agora vocÃª pode editar descriÃ§Ã£o, prioridade e dependÃªncias
                <br><strong>âš ï¸ ValidaÃ§Ã£o de Prazos:</strong> Sistema bloqueia criaÃ§Ã£o de atividades com prazo no passado
                <br><strong>ðŸ“Š Progresso AutomÃ¡tico:</strong> Calculado automaticamente baseado nas tarefas concluÃ­das
                <br><strong>ðŸ”” Alertas Inteligentes:</strong> NotificaÃ§Ãµes automÃ¡ticas para prazos vencendo
                <br><strong>â° Monitoramento 24/7:</strong> Sistema verifica automaticamente status das atividades
                <br><strong>ðŸ“± Ainda mais responsivo:</strong> Funciona perfeitamente em qualquer dispositivo!
            </div>
            
            <!-- Cards das Ãreas -->
            <div class="grid" id="areasGrid"></div>
        </div>
        
        <!-- Painel de Ãrea -->
        <div id="painelArea" class="hidden">
            <span class="back-btn" onclick="voltarDashboard()">â† Voltar ao Dashboard</span>
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <h2 id="areaNome">Nome da Ãrea</h2>
                        <p id="areaCoordenador" style="color: #6b7280;">Coordenador</p>
                    </div>
                    <button class="btn btn-primary" onclick="mostrarNovaAtividade()">+ Nova Atividade</button>
                </div>
            </div>
            
            <div class="grid">
                <div class="card">
                    <h3>ðŸ‘¥ Equipe</h3>
                    <div id="equipeLista"></div>
                </div>
                
                <div class="card">
                    <h3>ðŸ“‹ Atividades em Andamento</h3>
                    <div id="atividadesLista"></div>
                </div>
            </div>
        </div>
        
        <!-- Agenda Individual -->
        <div id="agendaIndividual" class="hidden">
            <span class="back-btn" onclick="voltarParaArea()">â† Voltar para Ãrea</span>
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <h2 id="pessoaNome">Nome da Pessoa</h2>
                        <p id="pessoaCargo" style="color: #6b7280;">Cargo</p>
                    </div>
                    <div style="display: flex; gap: 8px;">
                        <button class="btn btn-primary" onclick="mostrarNovaTarefa()">+ Nova Tarefa</button>
                        <button class="btn btn-warning btn-sm" onclick="mostrarMarcarStatus()">ðŸ“ Status DiÃ¡rio</button>
                    </div>
                </div>
            </div>
            
            <div class="grid">
                <div class="card">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
                        <h3>ðŸ“Š Minhas Responsabilidades</h3>
                        <div style="display: flex; gap: 8px; align-items: center;">
                            <span id="contadorResponsabilidades" style="background: #e5e7eb; padding: 4px 12px; border-radius: 20px; font-size: 14px;">0</span>
                            <button class="btn btn-success btn-sm" onclick="mostrarAdicionarResponsabilidade()" title="Buscar novas responsabilidades">
                                + Adicionar
                            </button>
                        </div>
                    </div>
                    <div style="margin-bottom: 12px;">
                        <select id="filtroResponsabilidades" onchange="renderizarResponsabilidades(estadoSistema.pessoaAtual)" 
                                style="padding: 6px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 13px;">
                            <option value="todas">ðŸ” Todas as responsabilidades</option>
                            <option value="urgentes">âš¡ Urgentes (â‰¤ 3 dias)</option>
                            <option value="emdia">âœ… Em dia</option>
                            <option value="atencao">âš ï¸ AtenÃ§Ã£o</option>
                            <option value="atrasadas">âŒ Atrasadas</option>
                        </select>
                    </div>
                    <div id="responsabilidadesLista"></div>
                </div>
                
                <div class="card">
                    <h3>ðŸ“… Agenda da Semana</h3>
                    <div class="agenda-semana" id="agendaSemana"></div>
                </div>
            </div>
            
            <div class="card">
                <h3>ðŸ“ ObservaÃ§Ãµes Pessoais</h3>
                <textarea id="observacoesPessoais" rows="3" style="width: 100%; padding: 12px; border: 1px solid #d1d5db; border-radius: 8px;" 
                    placeholder="Adicione suas observaÃ§Ãµes..." onblur="salvarObservacoes()"></textarea>
            </div>
        </div>
    </div>
    
    <!-- TODOS OS MODAIS AQUI (mantidos iguais ao original) -->
    <!-- Modal de Novo/Editar Evento -->
    <div id="modalEvento" class="modal">
        <div class="modal-content" style="max-width: 600px;">
            <h3 style="margin-bottom: 24px;" id="modalEventoTitulo">Novo Evento</h3>
            <input type="hidden" id="eventoId">
            
            <div class="form-group">
                <label>Tipo de Evento <span style="color: #ef4444;">*</span></label>
                <select id="eventoTipo" onchange="atualizarCamposEvento()">
                    <option value="reuniao">ðŸ“… ReuniÃ£o</option>
                    <option value="entrega">ðŸ“¦ Entrega</option>
                    <option value="prazo">â° Prazo</option>
                    <option value="marco">ðŸŽ¯ Marco do Projeto</option>
                    <option value="outro">ðŸ“Œ Outro (visita, auditoria, etc)</option>
                </select>
            </div>
            
            <div class="form-group">
                <label>TÃ­tulo <span style="color: #ef4444;">*</span></label>
                <input type="text" id="eventoTitulo" placeholder="Digite o tÃ­tulo do evento" required>
                <span class="error-message hidden" id="eventoTituloError">TÃ­tulo Ã© obrigatÃ³rio</span>
            </div>
            
            <div class="form-group">
                <label>DescriÃ§Ã£o</label>
                <textarea id="eventoDescricao" rows="3" placeholder="Adicione uma descriÃ§Ã£o detalhada..."></textarea>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" id="eventoDiaCompleto" onchange="toggleHorarios()">
                    Evento de dia completo
                </label>
            </div>
            
            <div class="form-group">
                <label>Data <span style="color: #ef4444;">*</span></label>
                <input type="date" id="eventoData" required>
                <span class="error-message hidden" id="eventoDataError">Data Ã© obrigatÃ³ria</span>
            </div>
            
            <div class="form-group" id="grupoDataFim" style="display: none;">
                <label>Data de TÃ©rmino</label>
                <input type="date" id="eventoDataFim">
                <small style="color: #6b7280;">Para eventos de mÃºltiplos dias</small>
            </div>
            
            <div class="horario-group" id="grupoHorarios">
                <div class="form-group">
                    <label>HorÃ¡rio InÃ­cio <span style="color: #ef4444;">*</span></label>
                    <input type="time" id="eventoHorarioInicio" value="09:00" required>
                    <span class="error-message hidden" id="eventoHorarioInicioError">HorÃ¡rio Ã© obrigatÃ³rio</span>
                </div>
                <div class="form-group">
                    <label>HorÃ¡rio Fim</label>
                    <input type="time" id="eventoHorarioFim" value="10:00">
                </div>
            </div>
            
            <div class="form-group" id="grupoLocal">
                <label>Local</label>
                <input type="text" id="eventoLocal" placeholder="Ex: Sala de reuniÃ£o, Canteiro de obras...">
            </div>
            
            <div class="form-group">
                <label id="labelPessoas">Participantes</label>
                <select id="eventoPessoas" onchange="adicionarPessoa()">
                    <option value="">Selecionar pessoa...</option>
                </select>
                <div class="pessoas-selecionadas" id="pessoasSelecionadas"></div>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" id="eventoRecorrente" onchange="toggleRecorrencia()">
                    Evento recorrente
                </label>
            </div>
            
            <div class="recorrencia-config hidden" id="recorrenciaConfig">
                <div class="form-group">
                    <label>Tipo de RecorrÃªncia</label>
                    <select id="recorrenciaTipo" onchange="atualizarConfigRecorrencia()">
                        <option value="diaria">DiÃ¡ria</option>
                        <option value="semanal">Semanal</option>
                        <option value="quinzenal">Quinzenal</option>
                        <option value="mensal">Mensal</option>
                        <option value="bimestral">Bimestral</option>
                        <option value="personalizada">Personalizada</option>
                    </select>
                </div>
                
                <div class="form-group hidden" id="grupoDiasSemana">
                    <label>Dias da Semana</label>
                    <div class="checkbox-group" style="flex-direction: column; gap: 8px;">
                        <label><input type="checkbox" value="0"> Domingo</label>
                        <label><input type="checkbox" value="1"> Segunda</label>
                        <label><input type="checkbox" value="2"> TerÃ§a</label>
                        <label><input type="checkbox" value="3"> Quarta</label>
                        <label><input type="checkbox" value="4"> Quinta</label>
                        <label><input type="checkbox" value="5"> Sexta</label>
                        <label><input type="checkbox" value="6"> SÃ¡bado</label>
                    </div>
                </div>
                
                <div class="form-group">
                    <label>AtÃ© quando?</label>
                    <input type="date" id="recorrenciaFim">
                    <small style="color: #6b7280;">Deixe vazio para continuar indefinidamente</small>
                </div>
            </div>
            
            <div class="form-group">
                <label>Vincular a Tarefas</label>
                <button type="button" class="btn btn-secondary btn-sm" onclick="abrirSeletorTarefas()">
                    + Selecionar Tarefas
                </button>
                <div class="tarefas-vinculadas" id="tarefasVinculadas"></div>
            </div>
            
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModal('modalEvento')">Cancelar</button>
                <button class="btn btn-primary" onclick="salvarEvento()" id="btnSalvarEvento">Salvar</button>
            </div>
        </div>
    </div>
    
    <!-- Modal de Nova/Editar Atividade -->
    <div id="modalAtividade" class="modal">
        <div class="modal-content">
            <h3 style="margin-bottom: 24px;" id="modalAtividadeTitulo">Nova Atividade</h3>
            <input type="hidden" id="atividadeId">
            <div class="form-group">
                <label>Nome da Atividade <span style="color: #ef4444;">*</span></label>
                <input type="text" id="atividadeNome" placeholder="Digite o nome da atividade" required>
                <span class="error-message hidden" id="atividadeNomeError">Nome Ã© obrigatÃ³rio</span>
            </div>
            <div class="form-group">
                <label>Prazo <span style="color: #ef4444;">*</span></label>
                <input type="date" id="atividadePrazo" required onchange="validarPrazoAtividade()">
                <span class="error-message hidden" id="atividadePrazoError">Prazo Ã© obrigatÃ³rio</span>
                <span class="error-message hidden" id="atividadePrazoPassadoError">âš ï¸ Prazo nÃ£o pode ser no passado!</span>
            </div>
            <div class="form-group">
                <label>ResponsÃ¡veis <span style="color: #ef4444;">*</span></label>
                <select id="atividadeResponsaveis" multiple style="height: 100px;" required></select>
                <small style="color: #6b7280;">Segure Ctrl para selecionar mÃºltiplos</small>
                <span class="error-message hidden" id="atividadeResponsaveisError">Selecione ao menos um responsÃ¡vel</span>
            </div>
            <div class="form-group">
                <label>Status</label>
                <select id="atividadeStatus">
                    <option value="verde">ðŸŸ¢ Em Dia</option>
                    <option value="amarelo">ðŸŸ¡ AtenÃ§Ã£o</option>
                    <option value="vermelho">ðŸ”´ Atraso</option>
                </select>
            </div>
            <div class="form-group">
                <label>Progresso (%) <span class="tooltip" data-tooltip="Calculado automaticamente pelas tarefas">â„¹ï¸</span></label>
                <input type="number" id="atividadeProgresso" min="0" max="100" placeholder="Calculado automaticamente" readonly 
                       style="background: #f9fafb; cursor: not-allowed;">
                <small style="color: #6b7280;">O progresso Ã© calculado automaticamente baseado nas tarefas concluÃ­das</small>
            </div>
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModal('modalAtividade')">Cancelar</button>
                <button class="btn btn-primary" onclick="salvarAtividade()" id="btnSalvarAtividade">Salvar</button>
            </div>
        </div>
    </div>
    
    <!-- Modal de Nova Tarefa -->
    <div id="modalTarefa" class="modal">
        <div class="modal-content">
            <h3 style="margin-bottom: 24px;">Nova Tarefa Pessoal</h3>
            <div class="form-group">
                <label>Tipo de Agendamento</label>
                <select id="tarefaTipo" onchange="alternarTipoAgendamento()">
                    <option value="semanal">Dia da Semana</option>
                    <option value="data">Data EspecÃ­fica</option>
                </select>
            </div>
            <div class="form-group" id="grupoDiaSemana">
                <label>Dia da Semana</label>
                <select id="tarefaDia">
                    <option value="segunda">Segunda-feira</option>
                    <option value="terca">TerÃ§a-feira</option>
                    <option value="quarta">Quarta-feira</option>
                    <option value="quinta">Quinta-feira</option>
                    <option value="sexta">Sexta-feira</option>
                </select>
            </div>
            <div class="form-group hidden" id="grupoData">
                <label>Data EspecÃ­fica <span style="color: #ef4444;">*</span></label>
                <input type="date" id="tarefaDataEspecifica">
                <span class="error-message hidden" id="tarefaDataError">Data Ã© obrigatÃ³ria</span>
            </div>
            <div class="form-group">
                <label>DescriÃ§Ã£o <span style="color: #ef4444;">*</span></label>
                <input type="text" id="tarefaDescricao" placeholder="Digite a descriÃ§Ã£o da tarefa" required>
                <span class="error-message hidden" id="tarefaDescricaoError">DescriÃ§Ã£o Ã© obrigatÃ³ria</span>
            </div>
            <div class="form-group">
                <label>HorÃ¡rio <span style="color: #ef4444;">*</span></label>
                <input type="time" id="tarefaHorario" required>
                <span class="error-message hidden" id="tarefaHorarioError">HorÃ¡rio Ã© obrigatÃ³rio</span>
            </div>
            <div class="form-group">
                <label>RecorrÃªncia</label>
                <select id="tarefaRecorrencia">
                    <option value="unica">Ãšnica vez</option>
                    <option value="diaria">DiÃ¡ria</option>
                    <option value="semanal">Semanal</option>
                    <option value="quinzenal">Quinzenal</option>
                    <option value="mensal">Mensal</option>
                </select>
            </div>
            <div class="form-group">
                <div class="checkbox-group">
                    <label>
                        <input type="checkbox" id="tarefaCalendario">
                        ðŸ“… Mostrar no calendÃ¡rio da equipe
                    </label>
                </div>
                <small style="color: #6b7280; font-size: 12px; display: block; margin-top: 4px;">
                    Marque para tarefas importantes que toda equipe deve ver
                </small>
            </div>
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModal('modalTarefa')">Cancelar</button>
                <button class="btn btn-primary" onclick="salvarTarefa()" id="btnSalvarTarefa">Salvar</button>
            </div>
        </div>
    </div>
    
    <!-- Modal de Editar Tarefa Individual -->
    <div id="modalEditarTarefa" class="modal">
        <div class="modal-content modal-editar-tarefa">
            <h3 style="margin-bottom: 24px;">âœï¸ Editar Tarefa</h3>
            <input type="hidden" id="editTarefaAtividadeId">
            <input type="hidden" id="editTarefaId">
            
            <div class="form-group">
                <label>DescriÃ§Ã£o <span style="color: #ef4444;">*</span></label>
                <input type="text" id="editTarefaDescricao" placeholder="Digite a descriÃ§Ã£o da tarefa" required>
                <span class="error-message hidden" id="editTarefaDescricaoError">DescriÃ§Ã£o Ã© obrigatÃ³ria</span>
            </div>
            
            <div class="form-group">
                <label>Prioridade</label>
                <select id="editTarefaPrioridade">
                    <option value="baixa">ðŸŸ¢ Baixa</option>
                    <option value="media">ðŸŸ¡ MÃ©dia</option>
                    <option value="alta">ðŸ”´ Alta</option>
                </select>
            </div>
            
            <div class="form-group">
                <label>ResponsÃ¡vel</label>
                <select id="editTarefaResponsavel">
                    <!-- SerÃ¡ preenchido dinamicamente -->
                </select>
            </div>
            
            <div class="form-group">
                <label>Prazo (opcional)</label>
                <input type="date" id="editTarefaPrazo">
            </div>
            
            <div class="form-group">
                <label>DependÃªncias</label>
                <div id="editTarefaDependencias" style="max-height: 150px; overflow-y: auto; border: 1px solid #d1d5db; border-radius: 8px; padding: 12px;">
                    <!-- SerÃ¡ preenchido dinamicamente -->
                </div>
                <small style="color: #6b7280;">Selecione tarefas que devem ser concluÃ­das antes desta</small>
            </div>
            
            <div class="form-group">
                <label>ObservaÃ§Ãµes</label>
                <textarea id="editTarefaObservacoes" rows="3" placeholder="Adicione observaÃ§Ãµes sobre a tarefa..."></textarea>
            </div>
            
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModal('modalEditarTarefa')">Cancelar</button>
                <button class="btn btn-primary" onclick="salvarEdicaoTarefa()">Salvar AlteraÃ§Ãµes</button>
            </div>
        </div>
    </div>
    
    <!-- Modal de Marcar Status -->
    <div id="modalStatus" class="modal">
        <div class="modal-content">
            <h3 style="margin-bottom: 24px;">Marcar Status do Dia</h3>
            <div class="form-group">
                <label>Data <span style="color: #ef4444;">*</span></label>
                <input type="date" id="statusData" required>
                <span class="error-message hidden" id="statusDataError">Data Ã© obrigatÃ³ria</span>
            </div>
            <div class="form-group">
                <label>Status</label>
                <select id="statusTipo">
                    <option value="presente">âœ… Presente</option>
                    <option value="ausencia">âŒ AusÃªncia</option>
                    <option value="home-office">ðŸ  Home Office</option>
                </select>
            </div>
            <div class="form-group">
                <label>ObservaÃ§Ã£o (opcional)</label>
                <input type="text" id="statusObservacao" placeholder="Ex: Consulta mÃ©dica, reuniÃ£o externa...">
            </div>
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModal('modalStatus')">Cancelar</button>
                <button class="btn btn-primary" onclick="salvarStatus()">Salvar</button>
            </div>
        </div>
    </div>
    
    <!-- Modal de Marcar Feriado -->
    <div id="modalFeriado" class="modal">
        <div class="modal-content">
            <h3 style="margin-bottom: 24px;">Gerenciar Feriados</h3>
            <div class="form-group">
                <label>Data <span style="color: #ef4444;">*</span></label>
                <input type="date" id="feriadoData" required>
                <span class="error-message hidden" id="feriadoDataError">Data Ã© obrigatÃ³ria</span>
            </div>
            <div class="form-group">
                <label>Nome do Feriado <span style="color: #ef4444;">*</span></label>
                <input type="text" id="feriadoNome" placeholder="Ex: Dia da IndependÃªncia" required>
                <span class="error-message hidden" id="feriadoNomeError">Nome Ã© obrigatÃ³rio</span>
            </div>
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModal('modalFeriado')">Cancelar</button>
                <button class="btn btn-primary" onclick="salvarFeriado()">Salvar</button>
            </div>
            
            <hr style="margin: 24px 0;">
            
            <h4 style="margin-bottom: 16px;">Feriados Cadastrados</h4>
            <div id="listaFeriados"></div>
        </div>
    </div>
    
    <!-- Modal de Importar -->
    <div id="modalImportar" class="modal">
        <div class="modal-content">
            <h3 style="margin-bottom: 24px;">Importar Dados</h3>
            <div class="form-group">
                <label>Selecione o arquivo JSON</label>
                <input type="file" id="importFile" accept=".json">
            </div>
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModal('modalImportar')">Cancelar</button>
                <button class="btn btn-primary" onclick="importarDados()">Importar</button>
            </div>
        </div>
    </div>
    
    <!-- Modal de SeleÃ§Ã£o de Tarefas -->
    <div id="modalSeletorTarefas" class="modal">
        <div class="modal-content" style="max-width: 700px;">
            <h3 style="margin-bottom: 24px;">Vincular Tarefas ao Evento</h3>
            <div class="form-group">
                <label>Buscar tarefas</label>
                <input type="text" id="buscarTarefaVinculo" placeholder="Digite para buscar..." onkeyup="filtrarTarefasVinculo()">
            </div>
            <div style="max-height: 400px; overflow-y: auto; margin: 20px 0;">
                <div id="listaTarefasVinculo"></div>
            </div>
            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="fecharModalSeletorTarefas()">Fechar</button>
            </div>
        </div>
    </div>
    <!-- Modal de Registro Moderno - Adicionar ao index.html apÃ³s modal modalFeriado -->
<div id="modalRegistro" class="modal">
    <div class="modal-content modal-registro">
        <div class="modal-header">
            <h3>ðŸš€ Criar Nova Conta</h3>
            <span class="modal-close" onclick="fecharModal('modalRegistro')">&times;</span>
        </div>
        
        <form id="formRegistro" onsubmit="return false;">
            <div class="form-step active" id="step1">
                <div class="form-group">
                    <label for="registroEmail">
                        ðŸ“§ Email <span class="required">*</span>
                    </label>
                    <input type="email" id="registroEmail" 
                           placeholder="seu@email.com" 
                           autocomplete="email"
                           oninput="validarCampoTempo('registroEmail')"
                           required>
                    <div class="field-validation">
                        <span class="validation-message" id="registroEmailValidation"></span>
                        <span class="validation-icon" id="registroEmailIcon"></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="registroSenha">
                        ðŸ”’ Senha <span class="required">*</span>
                    </label>
                    <div class="password-input-container">
                        <input type="password" id="registroSenha" 
                               placeholder="MÃ­nimo 6 caracteres" 
                               autocomplete="new-password"
                               oninput="validarCampoTempo('registroSenha')"
                               required>
                        <button type="button" class="toggle-password" onclick="toggleSenhaVisibilidade('registroSenha')">
                            ðŸ‘ï¸
                        </button>
                    </div>
                    <div class="field-validation">
                        <span class="validation-message" id="registroSenhaValidation"></span>
                        <span class="validation-icon" id="registroSenhaIcon"></span>
                    </div>
                    <div class="password-strength">
                        <div class="strength-bar">
                            <div class="strength-fill" id="strengthFill"></div>
                        </div>
                        <span class="strength-text" id="strengthText">Digite uma senha</span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="registroConfirmarSenha">
                        ðŸ”’ Confirmar Senha <span class="required">*</span>
                    </label>
                    <input type="password" id="registroConfirmarSenha" 
                           placeholder="Digite a senha novamente" 
                           autocomplete="new-password"
                           oninput="validarCampoTempo('registroConfirmarSenha')"
                           required>
                    <div class="field-validation">
                        <span class="validation-message" id="registroConfirmarSenhaValidation"></span>
                        <span class="validation-icon" id="registroConfirmarSenhaIcon"></span>
                    </div>
                </div>
                
                <button type="button" class="btn btn-primary btn-next" 
                        onclick="proximaEtapa()" id="btnProximaEtapa">
                    PrÃ³ximo â†’
                </button>
            </div>
            
            <div class="form-step" id="step2">
                <div class="form-group">
                    <label for="registroNome">
                        ðŸ‘¤ Nome Completo <span class="required">*</span>
                    </label>
                    <input type="text" id="registroNome" 
                           placeholder="Seu nome completo" 
                           autocomplete="name"
                           oninput="validarCampoTempo('registroNome')"
                           required>
                    <div class="field-validation">
                        <span class="validation-message" id="registroNomeValidation"></span>
                        <span class="validation-icon" id="registroNomeIcon"></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="registroCargo">
                        ðŸ’¼ Cargo/FunÃ§Ã£o <span class="required">*</span>
                    </label>
                    <select id="registroCargo" 
                            onchange="validarCampoTempo('registroCargo')"
                            required>
                        <option value="">Selecione seu cargo...</option>
                        <option value="Coordenador">ðŸŽ¯ Coordenador</option>
                        <option value="Engenheiro">âš™ï¸ Engenheiro</option>
                        <option value="Arquiteto">ðŸ—ï¸ Arquiteto</option>
                        <option value="TÃ©cnico">ðŸ”§ TÃ©cnico</option>
                        <option value="Administrativo">ðŸ“‹ Administrativo</option>
                        <option value="EstagiÃ¡rio">ðŸ“š EstagiÃ¡rio</option>
                        <option value="Consultor">ðŸ’¡ Consultor</option>
                        <option value="Diretor">ðŸ‘‘ Diretor</option>
                        <option value="outro">âž• Outro</option>
                    </select>
                    <div class="field-validation">
                        <span class="validation-message" id="registroCargoValidation"></span>
                        <span class="validation-icon" id="registroCargoIcon"></span>
                    </div>
                </div>
                
                <div class="form-group" id="grupoCargoOutro" style="display: none;">
                    <label for="registroCargoOutro">
                        âœï¸ Especifique seu cargo
                    </label>
                    <input type="text" id="registroCargoOutro" 
                           placeholder="Digite seu cargo especÃ­fico">
                </div>
                
                <div class="form-group">
                    <label for="registroArea">
                        ðŸ¢ Ãrea de AtuaÃ§Ã£o
                    </label>
                    <select id="registroArea">
                        <option value="">Selecione uma Ã¡rea (opcional)...</option>
                        <option value="Estrutura">ðŸ—ï¸ Estrutura</option>
                        <option value="InstalaÃ§Ãµes">âš¡ InstalaÃ§Ãµes</option>
                        <option value="Acabamentos">ðŸŽ¨ Acabamentos</option>
                        <option value="Paisagismo">ðŸŒ¿ Paisagismo</option>
                        <option value="AdministraÃ§Ã£o">ðŸ“Š AdministraÃ§Ã£o</option>
                        <option value="Qualidade">âœ… Qualidade</option>
                    </select>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="etapaAnterior()">
                        â† Voltar
                    </button>
                    <button type="button" class="btn btn-success" 
                            onclick="finalizarRegistro()" id="btnFinalizarRegistro">
                        <span class="loading hidden" id="loadingRegistro"></span>
                        âœ¨ Criar Conta
                    </button>
                </div>
            </div>
        </form>
        
        <div class="modal-footer">
            <div class="steps-indicator">
                <div class="step active" id="stepIndicator1">1</div>
                <div class="step-line"></div>
                <div class="step" id="stepIndicator2">2</div>
            </div>
            
            <p class="terms-text">
                Ao criar sua conta, vocÃª concorda com os 
                <a href="#" onclick="mostrarTermos()">termos de uso</a> 
                do sistema.
            </p>
        </div>
    </div>
</div>

<style>
/* === Modal Registro Moderno === */
.modal-registro {
    max-width: 480px;
    width: 90%;
    margin: 0 auto;
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
    border-radius: 16px;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    overflow: hidden;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 24px 24px 16px;
    border-bottom: 1px solid #e5e7eb;
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    color: white;
}

.modal-header h3 {
    margin: 0;
    font-size: 20px;
    font-weight: 600;
}

.modal-close {
    font-size: 24px;
    cursor: pointer;
    color: rgba(255, 255, 255, 0.8);
    transition: color 0.2s;
    line-height: 1;
}

.modal-close:hover {
    color: white;
}

.form-step {
    padding: 24px;
    display: none;
}

.form-step.active {
    display: block;
    animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    font-weight: 600;
    margin-bottom: 8px;
    color: #374151;
    font-size: 14px;
}

.required {
    color: #ef4444;
}

.form-group input,
.form-group select {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e5e7eb;
    border-radius: 8px;
    font-size: 14px;
    transition: all 0.2s;
    background: #ffffff;
}

.form-group input:focus,
.form-group select:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.password-input-container {
    position: relative;
}

.toggle-password {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
    font-size: 16px;
    color: #6b7280;
    padding: 4px;
}

.field-validation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 6px;
    min-height: 20px;
}

.validation-message {
    font-size: 12px;
    color: #6b7280;
    flex: 1;
}

.validation-message.error {
    color: #ef4444;
}

.validation-message.success {
    color: #10b981;
}

.validation-icon {
    font-size: 16px;
    margin-left: 8px;
}

.password-strength {
    margin-top: 8px;
}

.strength-bar {
    width: 100%;
    height: 4px;
    background: #e5e7eb;
    border-radius: 2px;
    overflow: hidden;
}

.strength-fill {
    height: 100%;
    width: 0%;
    transition: all 0.3s ease;
    border-radius: 2px;
}

.strength-text {
    font-size: 12px;
    color: #6b7280;
    margin-top: 4px;
    display: block;
}

.btn-next {
    width: 100%;
    padding: 14px;
    font-size: 15px;
    font-weight: 600;
    margin-top: 8px;
}

.form-actions {
    display: flex;
    gap: 12px;
    margin-top: 24px;
}

.form-actions .btn {
    flex: 1;
    padding: 14px;
    font-weight: 600;
}

.modal-footer {
    padding: 20px 24px;
    background: #f9fafb;
    border-top: 1px solid #e5e7eb;
}

.steps-indicator {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 16px;
}

.step {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: #e5e7eb;
    color: #6b7280;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 14px;
    transition: all 0.3s;
}

.step.active {
    background: #3b82f6;
    color: white;
}

.step.completed {
    background: #10b981;
    color: white;
}

.step-line {
    width: 60px;
    height: 2px;
    background: #e5e7eb;
    margin: 0 8px;
}

.terms-text {
    text-align: center;
    font-size: 12px;
    color: #6b7280;
    margin: 0;
}

.terms-text a {
    color: #3b82f6;
    text-decoration: none;
}

.terms-text a:hover {
    text-decoration: underline;
}

.loading {
    width: 16px;
    height: 16px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-right: 8px;
}

/* Input states */
.form-group input.valid {
    border-color: #10b981;
    background: #f0fdf4;
}

.form-group input.invalid {
    border-color: #ef4444;
    background: #fef2f2;
}

.form-group select.valid {
    border-color: #10b981;
}

.form-group select.invalid {
    border-color: #ef4444;
}

/* Responsividade */
@media (max-width: 640px) {
    .modal-registro {
        width: 95%;
        margin: 20px auto;
    }
    
    .modal-header {
        padding: 20px 20px 12px;
    }
    
    .form-step {
        padding: 20px;
    }
    
    .modal-footer {
        padding: 16px 20px;
    }
    
    .form-actions {
        flex-direction: column;
    }
    
    .form-actions .btn {
        width: 100%;
    }
}

/* AnimaÃ§Ã£o de carregamento */
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Efeito de foco aprimorado */
.form-group input:focus-visible,
.form-group select:focus-visible {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Estado desabilitado */
.btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

/* Melhor acessibilidade */
.form-group input[aria-invalid="true"] {
    border-color: #ef4444;
}

.form-group input[aria-invalid="false"] {
    border-color: #10b981;
}
</style>

    <!-- âœ… FIREBASE SCRIPTS ATUALIZADOS PARA VERSÃƒO 11.9.1 -->
    <script src="https://www.gstatic.com/firebasejs/11.9.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/11.9.1/firebase-database-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/11.9.1/firebase-auth-compat.js"></script>
    
    <!-- âœ… JAVASCRIPT MODULES EM ORDEM CORRETA -->
    
    <!-- 1. ConfiguraÃ§Ãµes primeiro -->
    <script src="assets/js/config/constants.js"></script>
    <script src="assets/js/config/firebase.js"></script>
    
    <!-- 2. Core modules -->
    <script src="assets/js/core/state.js"></script>
    <script src="assets/js/core/auth.js"></script>
    <script src="assets/js/core/sync.js"></script>
    
    <!-- 3. Utility modules -->
    <script src="assets/js/utils/helpers.js"></script>
    <script src="assets/js/utils/validators.js"></script>
    <script src="assets/js/utils/notifications.js"></script>
    <script src="assets/js/utils/dom.js"></script>
    
    <!-- âœ… CORREÃ‡ÃƒO INLINE DE DEPENDÃŠNCIAS -->
    <script>
    // ========== CORREÃ‡ÃƒO INLINE DE DEPENDÃŠNCIAS ==========
    (function() {
        console.log('ðŸ”§ Aplicando correÃ§Ãµes inline...');
        
        // Criar DOMUtils para compatibilidade
        window.DOMUtils = {
            buscar: typeof buscarElemento !== 'undefined' ? buscarElemento : (sel) => document.querySelector(sel),
            show: (el) => {
                const elemento = typeof el === 'string' ? document.getElementById(el) : el;
                if (elemento) {
                    elemento.style.display = '';
                    elemento.classList.remove('hidden');
                }
            },
            hide: (el) => {
                const elemento = typeof el === 'string' ? document.getElementById(el) : el;
                if (elemento) {
                    elemento.classList.add('hidden');
                }
            },
            setText: (id, text) => {
                const elemento = document.getElementById(id);
                if (elemento) elemento.textContent = text;
            }
        };
        
        // Garantir que formatarData existe
        if (typeof formatarData === 'undefined') {
            window.formatarData = function(data) {
                if (!data) return '';
                try {
                    const dataObj = new Date(data + 'T00:00:00');
                    return dataObj.toLocaleDateString('pt-BR');
                } catch (e) {
                    return data;
                }
            };
        }
        
        // Garantir que calcularDiasRestantes existe
        if (typeof calcularDiasRestantes === 'undefined') {
            window.calcularDiasRestantes = function(prazo) {
                const hoje = new Date();
                hoje.setHours(0, 0, 0, 0);
                const dataPrazo = new Date(prazo + 'T00:00:00');
                dataPrazo.setHours(0, 0, 0, 0);
                const diff = dataPrazo - hoje;
                return Math.floor(diff / (1000 * 60 * 60 * 24));
            };
        }
        
        // Garantir que obterIconeEvento existe
        if (typeof obterIconeEvento === 'undefined') {
            window.obterIconeEvento = function(tipo) {
                const icones = {
                    reuniao: 'ðŸ“…',
                    entrega: 'ðŸ“¦',
                    prazo: 'â°',
                    marco: 'ðŸŽ¯',
                    outro: 'ðŸ“Œ'
                };
                return icones[tipo] || 'ðŸ“Œ';
            };
        }
        
        // Criar funÃ§Ãµes stub para mÃ³dulos faltantes
        const stubs = {
            verificarIntegridadeSistema: () => console.log('ðŸ” Verificando integridade...'),
            atualizarDataAtual: () => {
                const hoje = new Date();
                const elemento = document.getElementById('dataAtual');
                if (elemento) {
                    elemento.textContent = hoje.toLocaleDateString('pt-BR', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });
                }
            },
            iniciarVerificacaoPrazos: () => {
                console.log('â° VerificaÃ§Ã£o de prazos iniciada');
                // Verificar a cada hora
                setInterval(() => {
                    verificarPrazosVencendo();
                }, 3600000); // 1 hora
                // Verificar imediatamente
                verificarPrazosVencendo();
            },
            verificarPrazosVencendo: () => {
                if (!dados?.areas) return;
                
                const hoje = new Date();
                hoje.setHours(0, 0, 0, 0);
                
                Object.values(dados.areas).forEach(area => {
                    area.atividades?.forEach(atividade => {
                        const diasRestantes = calcularDiasRestantes(atividade.prazo);
                        
                        if (diasRestantes <= 3 && diasRestantes >= 0) {
                            const alertaKey = `${atividade.id}_${atividade.prazo}`;
                            
                            if (!estadoSistema.alertasPrazosExibidos.has(alertaKey)) {
                                estadoSistema.alertasPrazosExibidos.add(alertaKey);
                                
                                if (window.Notifications) {
                                    window.Notifications.atencao(
                                        `â° Prazo se aproximando: "${atividade.nome}" - ${diasRestantes} dias restantes!`
                                    );
                                }
                            }
                        }
                    });
                });
            },
            mostrarNovaAtividade: () => {
                const modal = document.getElementById('modalAtividade');
                if (modal) {
                    document.getElementById('modalAtividadeTitulo').textContent = 'Nova Atividade';
                    document.getElementById('atividadeId').value = '';
                    modal.classList.add('active');
                    carregarResponsaveisAtividade();
                }
            },
            salvarAtividade: () => {
                const nome = document.getElementById('atividadeNome')?.value;
                const prazo = document.getElementById('atividadePrazo')?.value;
                const responsaveis = document.getElementById('atividadeResponsaveis')?.selectedOptions;
                
                if (!nome || !prazo || !responsaveis?.length) {
                    if (window.Notifications) {
                        window.Notifications.erro('Preencha todos os campos obrigatÃ³rios!');
                    }
                    return;
                }
                
                // Validar prazo
                if (!validarPrazoAtividade()) return;
                
                console.log('ðŸ’¾ Salvando atividade:', nome);
                if (window.Notifications) {
                    window.Notifications.sucesso('Atividade salva com sucesso!');
                }
                
                salvarDados();
                fecharModal('modalAtividade');
            },
            validarPrazoAtividade: () => {
                const prazo = document.getElementById('atividadePrazo')?.value;
                if (!prazo) return false;
                
                const hoje = new Date();
                hoje.setHours(0, 0, 0, 0);
                const dataPrazo = new Date(prazo + 'T00:00:00');
                
                if (dataPrazo < hoje) {
                    document.getElementById('atividadePrazoPassadoError')?.classList.remove('hidden');
                    return false;
                }
                
                document.getElementById('atividadePrazoPassadoError')?.classList.add('hidden');
                return true;
            },
            carregarResponsaveisAtividade: () => {
                const select = document.getElementById('atividadeResponsaveis');
                if (!select || !dados?.areas || !estadoSistema.areaAtual) return;
                
                const area = dados.areas[estadoSistema.areaAtual];
                if (!area?.equipe) return;
                
                select.innerHTML = area.equipe.map(pessoa => 
                    `<option value="${pessoa.nome}">${pessoa.nome} - ${pessoa.cargo}</option>`
                ).join('');
            },
            editarAtividade: (areaKey, index) => {
                const area = dados?.areas?.[areaKey];
                const atividade = area?.atividades?.[index];
                if (!atividade) return;
                
                const modal = document.getElementById('modalAtividade');
                if (modal) {
                    document.getElementById('modalAtividadeTitulo').textContent = 'Editar Atividade';
                    document.getElementById('atividadeId').value = atividade.id;
                    document.getElementById('atividadeNome').value = atividade.nome;
                    document.getElementById('atividadePrazo').value = atividade.prazo;
                    document.getElementById('atividadeStatus').value = atividade.status;
                    document.getElementById('atividadeProgresso').value = atividade.progresso || 0;
                    
                    carregarResponsaveisAtividade();
                    
                    // Selecionar responsÃ¡veis
                    setTimeout(() => {
                        const select = document.getElementById('atividadeResponsaveis');
                        if (select && atividade.responsaveis) {
                            Array.from(select.options).forEach(option => {
                                option.selected = atividade.responsaveis.includes(option.value);
                            });
                        }
                    }, 100);
                    
                    modal.classList.add('active');
                }
            },
            excluirAtividade: (areaKey, index) => {
                if (!confirm('Deseja realmente excluir esta atividade?')) return;
                
                const area = dados?.areas?.[areaKey];
                if (area?.atividades) {
                    area.atividades.splice(index, 1);
                    salvarDados();
                    renderizarArea(areaKey);
                    
                    if (window.Notifications) {
                        window.Notifications.sucesso('Atividade excluÃ­da!');
                    }
                }
            },
            mostrarNovaTarefa: () => {
                const modal = document.getElementById('modalTarefa');
                if (modal) {
                    modal.classList.add('active');
                    console.log('ðŸ“ Modal de nova tarefa aberto');
                }
            },
            salvarTarefa: () => {
                const descricao = document.getElementById('tarefaDescricao')?.value;
                if (!descricao) {
                    if (window.Notifications) {
                        window.Notifications.erro('Preencha a descriÃ§Ã£o da tarefa!');
                    }
                    return;
                }
                
                console.log('ðŸ’¾ Salvando tarefa:', descricao);
                if (window.Notifications) {
                    window.Notifications.sucesso('Tarefa salva com sucesso!');
                }
                
                fecharModal('modalTarefa');
            },
            alternarTipoAgendamento: () => {
                const tipo = document.getElementById('tarefaTipo')?.value;
                const grupoDia = document.getElementById('grupoDiaSemana');
                const grupoData = document.getElementById('grupoData');
                
                if (tipo === 'semanal') {
                    if (grupoDia) grupoDia.classList.remove('hidden');
                    if (grupoData) grupoData.classList.add('hidden');
                } else {
                    if (grupoDia) grupoDia.classList.add('hidden');
                    if (grupoData) grupoData.classList.remove('hidden');
                }
            },
            salvarEdicaoTarefa: () => {
                console.log('ðŸ’¾ Salvando ediÃ§Ã£o de tarefa');
                if (window.Notifications) {
                    window.Notifications.sucesso('Tarefa atualizada!');
                }
                fecharModal('modalEditarTarefa');
            },
            renderizarAgendaIndividual: (nomePessoa) => {
                console.log('ðŸ“‹ Renderizando agenda de:', nomePessoa);
                
                // Esconder outras telas
                document.getElementById('dashboardExecutivo').classList.add('hidden');
                document.getElementById('painelArea').classList.add('hidden');
                document.getElementById('agendaIndividual').classList.remove('hidden');
                
                // Atualizar informaÃ§Ãµes
                document.getElementById('pessoaNome').textContent = nomePessoa;
                
                // Buscar cargo da pessoa
                let cargo = '';
                if (dados?.areas) {
                    Object.values(dados.areas).forEach(area => {
                        const pessoa = area.equipe?.find(p => p.nome === nomePessoa);
                        if (pessoa) cargo = pessoa.cargo;
                    });
                }
                document.getElementById('pessoaCargo').textContent = cargo;
                
                // Renderizar responsabilidades
                renderizarResponsabilidades(nomePessoa);
                
                // Renderizar agenda semanal
                renderizarAgendaSemanal(nomePessoa);
            },
            renderizarResponsabilidades: (nomePessoa) => {
                const container = document.getElementById('responsabilidadesLista');
                if (!container || !dados?.areas) return;
                
                const responsabilidades = [];
                
                Object.entries(dados.areas).forEach(([areaKey, area]) => {
                    area.atividades?.forEach(atividade => {
                        if (atividade.responsaveis?.includes(nomePessoa)) {
                            responsabilidades.push({
                                ...atividade,
                                area: area.nome,
                                areaKey
                            });
                        }
                    });
                });
                
                // Atualizar contador
                const contador = document.getElementById('contadorResponsabilidades');
                if (contador) contador.textContent = responsabilidades.length;
                
                // Renderizar lista
                container.innerHTML = responsabilidades.map(resp => `
                    <div style="padding: 12px; border: 1px solid #e5e7eb; border-radius: 8px; margin-bottom: 8px;">
                        <div style="display: flex; justify-content: space-between; align-items: center;">
                            <strong>${resp.nome}</strong>
                            <span class="status-indicator status-${resp.status}"></span>
                        </div>
                        <div style="font-size: 12px; color: #6b7280; margin-top: 4px;">
                            ðŸ“‚ ${resp.area} | ðŸ“… ${formatarData(resp.prazo)}
                        </div>
                    </div>
                `).join('');
            },
            renderizarAgendaSemanal: (nomePessoa) => {
                const container = document.getElementById('agendaSemana');
                if (!container) return;
                
                const diasSemana = ['Segunda', 'TerÃ§a', 'Quarta', 'Quinta', 'Sexta'];
                
                container.innerHTML = diasSemana.map(dia => `
                    <div class="dia-semana">
                        <h4>${dia}</h4>
                        <div style="font-size: 12px; color: #6b7280;">
                            Sem tarefas agendadas
                        </div>
                    </div>
                `).join('');
            },
            mostrarAdicionarResponsabilidade: () => {
                if (window.Notifications) {
                    window.Notifications.info('FunÃ§Ã£o em desenvolvimento...');
                }
            },
            salvarObservacoes: () => {
                const observacoes = document.getElementById('observacoesPessoais')?.value;
                console.log('ðŸ’¾ Salvando observaÃ§Ãµes:', observacoes);
                
                if (window.Notifications) {
                    window.Notifications.sucesso('ObservaÃ§Ãµes salvas!');
                }
            },
            mostrarMarcarStatus: () => {
                const modal = document.getElementById('modalStatus');
                if (modal) {
                    document.getElementById('statusData').value = new Date().toISOString().split('T')[0];
                    modal.classList.add('active');
                }
            },
            salvarStatus: () => {
                const data = document.getElementById('statusData')?.value;
                const tipo = document.getElementById('statusTipo')?.value;
                
                if (!data) {
                    if (window.Notifications) {
                        window.Notifications.erro('Selecione uma data!');
                    }
                    return;
                }
                
                console.log('ðŸ’¾ Salvando status:', tipo, 'para', data);
                if (window.Notifications) {
                    window.Notifications.sucesso('Status marcado!');
                }
                
                fecharModal('modalStatus');
            },
            exportarDados: () => {
                if (!dados) {
                    if (window.Notifications) {
                        window.Notifications.erro('Nenhum dado para exportar!');
                    }
                    return;
                }
                
                try {
                    const dataExport = {
                        versao: VERSAO_SISTEMA,
                        exportadoEm: new Date().toISOString(),
                        dados: dados
                    };
                    
                    const json = JSON.stringify(dataExport, null, 2);
                    const blob = new Blob([json], { type: 'application/json' });
                    const url = URL.createObjectURL(blob);
                    
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = `backup_sistema_${new Date().toISOString().split('T')[0]}.json`;
                    a.click();
                    
                    URL.revokeObjectURL(url);
                    
                    if (window.Notifications) {
                        window.Notifications.sucesso('Dados exportados com sucesso!');
                    }
                } catch (error) {
                    console.error('Erro ao exportar:', error);
                    if (window.Notifications) {
                        window.Notifications.erro('Erro ao exportar dados!');
                    }
                }
            },
            mostrarImportar: () => {
                const modal = document.getElementById('modalImportar');
                if (modal) {
                    modal.classList.add('active');
                }
            },
            importarDados: () => {
                const input = document.getElementById('importFile');
                const file = input?.files?.[0];
                
                if (!file) {
                    if (window.Notifications) {
                        window.Notifications.erro('Selecione um arquivo!');
                    }
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    try {
                        const importData = JSON.parse(e.target.result);
                        
                        if (!importData.dados) {
                            throw new Error('Formato invÃ¡lido');
                        }
                        
                        if (confirm('Isso substituirÃ¡ todos os dados atuais. Continuar?')) {
                            dados = importData.dados;
                            salvarDados();
                            renderizarDashboard();
                            
                            if (window.Notifications) {
                                window.Notifications.sucesso('Dados importados com sucesso!');
                            }
                            
                            fecharModal('modalImportar');
                        }
                    } catch (error) {
                        console.error('Erro ao importar:', error);
                        if (window.Notifications) {
                            window.Notifications.erro('Erro ao importar arquivo!');
                        }
                    }
                };
                
                reader.readAsText(file);
            },
            mostrarMarcarFeriado: () => {
                const modal = document.getElementById('modalFeriado');
                if (modal) {
                    modal.classList.add('active');
                    listarFeriados();
                }
            },
            salvarFeriado: () => {
                const data = document.getElementById('feriadoData')?.value;
                const nome = document.getElementById('feriadoNome')?.value;
                
                if (!data || !nome) {
                    if (window.Notifications) {
                        window.Notifications.erro('Preencha todos os campos!');
                    }
                    return;
                }
                
                if (!dados.feriados) dados.feriados = {};
                dados.feriados[data] = nome;
                
                salvarDados();
                renderizarCalendario();
                listarFeriados();
                
                if (window.Notifications) {
                    window.Notifications.sucesso('Feriado salvo!');
                }
                
                // Limpar campos
                document.getElementById('feriadoData').value = '';
                document.getElementById('feriadoNome').value = '';
            },
            listarFeriados: () => {
                const container = document.getElementById('listaFeriados');
                if (!container || !dados?.feriados) return;
                
                const feriados = Object.entries(dados.feriados);
                
                if (feriados.length === 0) {
                    container.innerHTML = '<p style="color: #6b7280;">Nenhum feriado cadastrado</p>';
                    return;
                }
                
                container.innerHTML = feriados
                    .sort((a, b) => a[0].localeCompare(b[0]))
                    .map(([data, nome]) => `
                        <div style="display: flex; justify-content: space-between; align-items: center; 
                                    padding: 8px; border: 1px solid #e5e7eb; border-radius: 4px; margin-bottom: 4px;">
                            <span>${formatarData(data)} - ${nome}</span>
                            <button class="btn btn-sm" onclick="excluirFeriado('${data}')" 
                                    style="background: #ef4444; color: white;">Excluir</button>
                        </div>
                    `).join('');
            },
            excluirFeriado: (data) => {
                if (!confirm('Deseja excluir este feriado?')) return;
                
                delete dados.feriados[data];
                salvarDados();
                renderizarCalendario();
                listarFeriados();
                
                if (window.Notifications) {
                    window.Notifications.sucesso('Feriado excluÃ­do!');
                }
            },
            abrirSeletorTarefas: () => {
                if (window.Notifications) {
                    window.Notifications.info('Seletor de tarefas em desenvolvimento...');
                }
            },
            fecharModalSeletorTarefas: () => {
                const modal = document.getElementById('modalSeletorTarefas');
                if (modal) modal.classList.remove('active');
            },
            filtrarTarefasVinculo: () => {
                console.log('ðŸ” Filtrando tarefas...');
            },
            voltarParaArea: () => {
                if (estadoSistema.areaAtual) {
                    renderizarArea(estadoSistema.areaAtual);
                } else {
                    voltarDashboard();
                }
            }
        };
        
        // Aplicar stubs apenas se a funÃ§Ã£o nÃ£o existir
        Object.entries(stubs).forEach(([nome, funcao]) => {
            if (typeof window[nome] === 'undefined') {
                window[nome] = funcao;
            }
        });
        
        // Adicionar stubs ao window global para outras funÃ§Ãµes auxiliares
        window.verificarPrazosVencendo = stubs.verificarPrazosVencendo;
        window.carregarResponsaveisAtividade = stubs.carregarResponsaveisAtividade;
        window.renderizarResponsabilidades = stubs.renderizarResponsabilidades;
        window.renderizarAgendaSemanal = stubs.renderizarAgendaSemanal;
        window.listarFeriados = stubs.listarFeriados;
        window.excluirFeriado = stubs.excluirFeriado;
        
        console.log('âœ… CorreÃ§Ãµes inline aplicadas com sucesso!');
    })();
    </script>
    
    <!-- 4. Feature modules -->
    <script src="assets/js/modules/dashboard.js"></script>
    <script src="assets/js/modules/calendario.js"></script>
    <!-- Comentar mÃ³dulos que ainda nÃ£o existem
    <script src="assets/js/modules/tarefas.js"></script>
    <script src="assets/js/modules/atividades.js"></script>
    <script src="assets/js/modules/agenda.js"></script>
    <script src="assets/js/modules/relatorios.js"></script>
    -->
    
    <!-- 5. Core initialization -->
    <script src="assets/js/core/init.js"></script>
    
    <!-- 6. Main app initialization -->
        <script src="assets/js/utils/functions-criticas.js"></script>
    <script src="assets/js/app.js"></script>
    <script src="assets/js/core/auto-org.js"></script>
</body>
</html>

